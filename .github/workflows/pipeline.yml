name: Train-Pipeline

on:
  push:
  pull_request:
    branches:
    - main
    - branch_01

jobs:
  test_train:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test files
        run: |
          python -m pytest -vv test_train.py

  train_pipeline:
      runs-on: ubuntu-latest
      needs: [test_train]
      steps:
          - uses: actions/checkout@v1
            with:
              fetch-depth: 0

          - name: Set up Python 3.9
            uses: actions/setup-python@v1
            with:
                python-version: 3.9

          - name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

          - name: Train Model
            run: |
              python train.py --mlflow_tracking_uri ${{secrets.MLFLOW_TRACKING_URI}} --mlflow_tracking_username ${{secrets.MLFLOW_TRACKING_USERNAME}} --mlflow_tracking_password ${{secrets.MLFLOW_TRACKING_PASSWORD}}
              

  build_image:
      runs-on: ubuntu-latest
      needs: [train_pipeline]
      steps:
        - uses: actions/checkout@v2
        - name: docker login
          run: |
            docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
        - name: Build the Docker image
          run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/${{secrets.DOCKER_IMAGE_NAME}}

        - name: Docker Push
          run: docker push ${{secrets.DOCKER_USER}}/${{secrets.DOCKER_IMAGE_NAME}}